{"version":3,"sources":["types/pageLeagues/types.tsx","components/pageLeagues/leagueCard/leagueCard.tsx","components/pageLeagues/leagueCardList.tsx","hooks/useTypeSelector.ts","types/pageLeague/types.tsx","components/otherComponents/preloader.tsx","components/otherComponents/error.tsx","components/pageLeagues/leaguesLogo/LaLiga.svg","components/pageLeagues/leaguesLogo/ligue1.svg","components/pageLeagues/leaguesLogo/premier-league.svg","components/pageLeagues/leaguesLogo/seriaA.svg","components/pageLeagues/pageLeagues.tsx","store/actionCreators/leagues.ts","store/actionCreators/matchesLeague.ts","types/pageTeam/types.tsx","components/pageLeague/teamOfStandings.tsx","components/pageLeague/tableStandings.tsx","components/otherComponents/soccer-ball.svg","components/otherComponents/navBar.tsx","components/pageLeague/pageLeague.tsx","store/actionCreators/league.ts","store/actionCreators/teams.ts","store/actionCreators/standings.ts","store/actionCreators/team.ts","store/actionCreators/matchesTeam.ts","components/pageTeam/matchTeam.tsx","components/pageTeam/matchesTeamList.tsx","components/pageTeam/pageTeam.tsx","store/reducers/leaguesReducer.ts","store/reducers/matchesReducer.ts","store/reducers/teamsReducer.ts","store/reducers/leagueReducer.ts","store/reducers/standingsReducer.ts","store/reducers/teamReducer.ts","store/reducers/matchesTeamReducer.tsx","store/reducers/index.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LeaguesActionTypes","LeagueCard","league","history","useHistory","className","src","area","ensignUrl","emblemUrl","alt","name","currentSeason","startDate","split","endDate","replaceAll","currentMatchday","onClick","push","id","LeagueCardList","leagues","map","useTypeSelector","useSelector","LeagueActionTypes","TeamsActionTypes","MatchesActionTypes","StandingsActionTypes","Preloader","Error","PageLeagues","state","loading","filterLeagues","error","dispatch","useDispatch","refInputLeague","useRef","useEffect","a","data","headers","process","type","FETCH_LEAGUES","axios","get","response","FETCH_LEAGUES_SUCCESS","payload","competitions","FETCH_LEAGUES_ERROR","style","marginBottom","LaLigaImg","Liga1Img","PremierLeagueImg","SeriaAImg","placeholder","ref","onChange","e","value","filter","toLowerCase","indexOf","FILTER_LEAGUES","filteredLeagues","filteringLeagues","target","length","TeamActionTypes","MatchesTeamActionTypes","fetchMatchesOfDate","dataFrom","dataTo","FETCH_MATCHES","FETCH_MATCHES_DATE","matches","FETCH_MATCHES_ERROR","TeamOfStandings","team","position","crestUrl","go","playedGames","won","draw","lost","goalDifference","points","TableStandings","standings","Navbar","ball","href","PageLeague","basicInfo","activePage","loadingMatches","errorMatches","teams","errorTeams","loadingTeams","loadingStandings","errorStandings","useState","isStandings","setStandings","start","setStart","end","setEnd","pages","setPages","setDataFrom","setDataTo","refButtonTeamList","refButtonTeamTable","flag","setFlag","seasonState","setSeasonState","initialPages","pageCount","Math","ceil","array","i","changePage","active","page","CHANGE_MATCHES_ACTIVE_PAGE","param","getParams","Number","startDateLeague","localStorage","getItem","endDateLeague","FETCH_MATCHES_SUCCESS","fetchMatches","FETCH_LEAGUE","FETCH_LEAGUE_SUCCESS","FETCH_LEAGUE_ERROR","fetchLeague","FETCH_TEAMS","FETCH_TEAMS_SUCCESS","FETCH_TEAMS_ERROR","fetchTeams","FETCH_STANDINGS","FETCH_STANDINGS_SUCCESS","table","FETCH_STANDINGS_ERROR","fetchStandings","undefined","season","setItem","key","arrayParams","window","location","hash","console","log","changeTeamTable","current","classList","toggle","changeSeasonMatches","FETCH_MATCHES_SEASON","fetchMatchesOfSeason","changeDateMatches","flagDate","date","max","min","slice","match","utcDate","score","fullTime","homeTeam","awayTeam","status","fetchMatchesTeamOfDate","venue","dateFrom","dateTo","FETCH_MATCHES_TEAM","FETCH_MATCHES_TEAM_SUCCESS","FETCH_MATCHES_TEAM_ERROR","MatchTeam","changeTeam","reload","MatchesTeamList","PageTeam","matchesTeam","refButtonTeamListHome","refButtonTeamListAway","setDateFrom","setDateTo","setVenue","FETCH_TEAM","FETCH_TEAM_SUCCESS","FETCH_TEAM_ERROR","fetchTeam","startDateTeam","endDateTeam","fetchMatchesTeam","CHANGE_MATCHES_TEAM_ACTIVE_PAGE","changeVenueMatches","changeMatchesList","changeDateMatchesTeam","shortName","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c31b732.chunk.js","sourcesContent":["export interface IArea{\n    id: number,\n    name: string,\n    ensignUrl: string | null\n}\n\nexport interface ILeagueCard{\n    id: number,\n    name: string,\n    area: IArea,\n    emblemUrl: string | null,\n    currentSeason: {\n        startDate: string,\n        endDate: string,\n        currentMatchday: number\n    }\n\n}\n\nexport interface LeaguesState {\n    leagues: ILeagueCard[],\n    filterLeagues: ILeagueCard[],\n    loading: boolean,\n    error: null | any\n}\nexport enum LeaguesActionTypes {\n    FETCH_LEAGUES = \"FETCH_LEAGUES\",\n    FETCH_LEAGUES_SUCCESS = \"FETCH_LEAGUES_SUCCESS\",\n    FETCH_LEAGUES_ERROR = \"FETCH_LEAGUES_ERROR\",\n    FILTER_LEAGUES = \"FILTER_LEAGUES\"\n}\ninterface FetchLeaguesAction {\n    type: LeaguesActionTypes.FETCH_LEAGUES\n}\n\ninterface FetchLeaguesActionSuccess {\n    type: LeaguesActionTypes.FETCH_LEAGUES_SUCCESS;\n    payload: ILeagueCard[]\n}\n\ninterface FetchLeaguesActionError {\n    type: LeaguesActionTypes.FETCH_LEAGUES_ERROR;\n    payload: any\n}\n\ninterface FilterLeagues {\n    type: LeaguesActionTypes.FILTER_LEAGUES;\n    payload: {\n        filteredLeagues: ILeagueCard[]\n    }\n}\n\nexport type LeaguesAction = FetchLeaguesActionError |  FetchLeaguesAction | FetchLeaguesActionSuccess | FilterLeagues\n\nexport interface IRequestLeagues{\n    competitions: ILeagueCard[]\n}\n\n","import React from 'react'\nimport './leagueCard.scss'\nimport {ILeagueCard} from \"../../../types/pageLeagues/types\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface LeagueCardProps{\n    league: ILeagueCard\n}\n\nexport const LeagueCard:React.FC<LeagueCardProps> =\n    ({\n       league\n     }) => {\n    const history = useHistory();\n    return(\n        <div className={'leagueCard'}>\n            <div className={\"titleLeague\"}>\n                <div>\n                    <img src={league.area.ensignUrl\n                        ? league.area.ensignUrl\n                        : league.emblemUrl ? league.emblemUrl :\n                            \"/images/leaguesLogo/premier-league.svg\"} alt={league.name}/>\n                </div>\n                <div>\n                    {league.name}\n                </div>\n            </div>\n            <div className={\"dateLeague\"}>\n                <div>\n                    {league.currentSeason.startDate.split(\"-\")[0]}\n                    /\n                    {league.currentSeason.endDate.split(\"-\")[0]}\n                </div>\n                <div>\n                    {league.currentSeason.startDate.replaceAll(\"-\", \".\")}\n                    -\n                    {league.currentSeason.endDate.replaceAll(\"-\", \".\")}\n                </div>\n            </div>\n            <div className={\"descriptionLeague\"}>\n                <div className={\"stageCompetition\"}>\n                    <div>\n                        Стадия сезона\n                    </div>\n                    <div>\n                        {league.currentSeason.currentMatchday}-й тур чемпионата\n                    </div>\n                </div>\n\n                    <div className={\"aboutCompetition\"} onClick={() => history.push(`/league?id=${league.id}`)}>\n                            Узнать подробнее\n                    </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {ILeagueCard} from \"../../types/pageLeagues/types\";\nimport {LeagueCard} from \"./leagueCard/leagueCard\";\nimport './pageLeagues.scss'\ninterface LeagueCardListProps{\n    leagues: ILeagueCard[]\n}\nconst LeagueCardList:React.FC<LeagueCardListProps> = ({leagues}) => {\n    return(\n        <div className={\"leagues\"}>\n            {leagues.map(league => {\n                return <LeagueCard key={league.id} league={league}/>\n            })}\n        </div>\n    )\n}\nexport default LeagueCardList;","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducers\";\n\n\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector","export interface ILeague {\n    id: number,\n    name: string,\n    currentSeason?: ISeason\n}\n\ninterface ISeason {\n    id: number\n    startDate: string,\n    endDate: string,\n    currentMatchday: number\n}\n\nexport interface IMatch {\n    id: number,\n    status: string,\n    utcDate: string,\n    season: {\n        id: number,\n        startDate: string,\n        endDate: string,\n    },\n    score: {\n        winner: string,\n        fullTime: {\n            homeTeam: number,\n            awayTeam: number\n        },\n        penalties: {\n            homeTeam: number | null,\n            awayTeam: number | null\n        }\n    },\n    homeTeam: {\n        id: number,\n        name: string\n    },\n    awayTeam: {\n        \"id\": number,\n        \"name\": string\n    }\n}\n\nexport interface ITeam {\n    id: number,\n    name: string,\n    crestUrl: string,\n}\n\nexport interface LeagueState {\n    basicInfo: ILeague,\n    loading: boolean,\n    error: null | any,\n}\n\nexport interface TeamsState {\n    teams: ITeam[],\n    loadingTeams: boolean,\n    errorTeams: null | any,\n}\n\nexport interface MatchesState {\n    matches: IMatch[],\n    activePage: number,\n    loadingMatches: boolean,\n    errorMatches: null | any\n}\n\nexport interface TeamTable {\n    position: number,\n    team: {\n        id: number,\n        name: string,\n        crestUrl: string\n    },\n    playedGames: number,\n    won: number,\n    draw: number,\n    lost: number,\n    goalDifference: number,\n    points: number,\n}\n\nexport interface IRequestStandings {\n    standings: [\n        {\n            table: TeamTable[]\n        }\n    ]\n}\n\nexport interface StandingsState {\n    standings: TeamTable[],\n    loadingStandings: boolean,\n    errorStandings: null | any\n}\n\nexport enum LeagueActionTypes {\n    FETCH_LEAGUE = \"FETCH_LEAGUE\",\n    FETCH_LEAGUE_SUCCESS = \"FETCH_LEAGUE_SUCCESS\",\n    FETCH_LEAGUE_ERROR = \"FETCH_LEAGUE_ERROR\"\n}\n\nexport enum TeamsActionTypes {\n    FETCH_TEAMS = \"FETCH_TEAMS\",\n    FETCH_TEAMS_SUCCESS = \"FETCH_TEAMS_SUCCESS\",\n    FETCH_TEAMS_ERROR = \"FETCH_TEAMS_ERROR\"\n}\n\nexport enum MatchesActionTypes {\n    FETCH_MATCHES = \"FETCH_MATCHES\",\n    FETCH_MATCHES_SUCCESS = \"FETCH_MATCHES_SUCCESS\",\n    FETCH_MATCHES_ERROR = \"FETCH_MATCHES_ERROR\",\n    FETCH_MATCHES_SEASON = \"FETCH_MATCHES_SEASON_SUCCESS\",\n    FETCH_MATCHES_DATE = \"FETCH_MATCHES_SEASON_DATE\",\n    CHANGE_MATCHES_ACTIVE_PAGE = \"CHANGE_MATCHES_ACTIVE_PAGE\"\n}\n\nexport enum StandingsActionTypes {\n    FETCH_STANDINGS = \"FETCH_STANDINGS\",\n    FETCH_STANDINGS_SUCCESS = \"FETCH_STANDINGS_SUCCESS\",\n    FETCH_STANDINGS_ERROR = \"FETCH_STANDINGS_ERROR\"\n}\n\ninterface FetchStandingsAction {\n    type: StandingsActionTypes.FETCH_STANDINGS\n}\n\ninterface FetchStandingsActionSuccess {\n    type: StandingsActionTypes.FETCH_STANDINGS_SUCCESS,\n    payload: TeamTable[]\n}\n\ninterface FetchStandingsActionError {\n    type: StandingsActionTypes.FETCH_STANDINGS_ERROR,\n    payload: any\n}\n\ninterface FetchLeagueAction {\n    type: LeagueActionTypes.FETCH_LEAGUE\n}\n\ninterface FetchLeagueActionSuccess {\n    type: LeagueActionTypes.FETCH_LEAGUE_SUCCESS,\n    payload: ILeague\n}\n\ninterface FetchLeagueActionError {\n    type: LeagueActionTypes.FETCH_LEAGUE_ERROR,\n    payload: any\n}\n\ninterface FetchTeamsAction {\n    type: TeamsActionTypes.FETCH_TEAMS\n}\n\ninterface FetchTeamsActionSuccess {\n    type: TeamsActionTypes.FETCH_TEAMS_SUCCESS,\n    payload: ITeam[]\n}\n\ninterface FetchTeamsActionError {\n    type: TeamsActionTypes.FETCH_TEAMS_ERROR,\n    payload: any\n}\n\ninterface FetchMatchesAction {\n    type: MatchesActionTypes.FETCH_MATCHES\n}\n\ninterface FetchMatchesActionSuccess {\n    type: MatchesActionTypes.FETCH_MATCHES_SUCCESS,\n    payload: IMatch[]\n}\n\ninterface FetchMatchesActionSeason {\n    type: MatchesActionTypes.FETCH_MATCHES_SEASON,\n    payload: IMatch[]\n}\n\ninterface FetchMatchesActionDate {\n    type: MatchesActionTypes.FETCH_MATCHES_DATE,\n    payload: IMatch[]\n}\n\ninterface FetchMatchesActionError {\n    type: MatchesActionTypes.FETCH_MATCHES_ERROR,\n    payload: any\n}\n\ninterface ChangeMatchesActivePage {\n    type: MatchesActionTypes.CHANGE_MATCHES_ACTIVE_PAGE,\n    payload: number\n}\n\n\nexport type LeagueAction = FetchLeagueAction | FetchLeagueActionSuccess | FetchLeagueActionError\nexport type MatchesAction = FetchMatchesAction | FetchMatchesActionSuccess | FetchMatchesActionError\n    | ChangeMatchesActivePage | FetchMatchesActionSeason | FetchMatchesActionDate\nexport type TeamsAction = FetchTeamsAction | FetchTeamsActionSuccess | FetchTeamsActionError\nexport type StandingsAction = FetchStandingsAction | FetchStandingsActionSuccess | FetchStandingsActionError\n","import React from 'react'\nimport \"./otherComponents.scss\"\nconst Preloader:React.FC = () => {\n    return(\n        <div className=\"preloader\">\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    )\n}\nexport default Preloader","import React from 'react'\nimport \"./otherComponents.scss\"\nconst Error:React.FC = () => {\n    return (\n        <div className={\"error\"}>\n            <div>Ошибка</div>\n            <div>Превышен лимит запросов. Подождите минуту и перезагрузите страницу.</div>\n        </div>\n    )\n}\n\nexport default Error","export default __webpack_public_path__ + \"static/media/LaLiga.ac98ef87.svg\";","export default __webpack_public_path__ + \"static/media/ligue1.6c6c309e.svg\";","export default __webpack_public_path__ + \"static/media/premier-league.6c5e15ca.svg\";","export default __webpack_public_path__ + \"static/media/seriaA.696c8885.svg\";","import React, {useEffect, useRef} from 'react';\nimport './pageLeagues.scss'\nimport LeagueCardList from \"./leagueCardList\";\nimport {useTypeSelector} from \"../../hooks/useTypeSelector\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchLeagues, filteringLeagues} from \"../../store/actionCreators/leagues\";\nimport Preloader from \"../otherComponents/preloader\";\nimport Error from \"../otherComponents/error\";\nimport LaLigaImg from './leaguesLogo/LaLiga.svg'\nimport Liga1Img from './leaguesLogo/ligue1.svg'\nimport PremierLeagueImg from './leaguesLogo/premier-league.svg'\nimport SeriaAImg from './leaguesLogo/seriaA.svg'\nconst PageLeagues:React.FC = () => {\n    const {loading, leagues, filterLeagues, error} = useTypeSelector(state => state.leagues)\n    const dispatch = useDispatch()\n    const refInputLeague = useRef(null);\n    useEffect(() => {\n        dispatch(fetchLeagues())\n    }, [])\n\n    const handleInputLeague = (e:React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(filteringLeagues(e.target.value, leagues))\n    }\n    return(\n        <div className={\"pageLeagues\"}>\n            <div className={\"aboutSite\"} >\n                <p>\n                    FootSTAT – агрегатор футбольной статистики\n                </p>\n                <p>\n                    Актуальная информация о чемпионатах и командах\n                </p>\n            </div>\n            <div className={\"blockChangeLeagues\"} style={{marginBottom: \"5%\"}}>\n                <div className={\"blockMainLeagues\"}>\n                    <img src={LaLigaImg} alt={\"ла-лига\"}/>\n                    <img src={Liga1Img} alt={\"лига 1\"}/>\n                    <img src={PremierLeagueImg} alt={\"премьер лига\"}/>\n                    <img src={SeriaAImg} alt={\"серия А\"}/>\n                </div>\n                <div className={\"blockLeagues\"}>\n                    <div className={\"titleBlock\"}>\n                        Выберите соревнование для просмотра статистики\n                    </div>\n                    <div className={\"filterLeagues\"}>\n                        <input placeholder={\"Введите название соревнования\"}\n                               ref={refInputLeague}\n                               onChange={handleInputLeague}\n                              />\n                    </div>\n                    {\n                        filterLeagues.length !== 0 ?\n                            loading ? <Preloader/> : error ? <Error/> : <LeagueCardList leagues={filterLeagues}/>\n                            :\n                            <div className={\"emptyListLeagues\"}>\n                                По запросу ничего не найдено\n                            </div>\n                    }\n\n                </div>\n            </div>\n            <div className={\"endBar\"}/>\n        </div>\n    )\n};\n\nexport default PageLeagues;","import {ILeagueCard, IRequestLeagues, LeaguesAction, LeaguesActionTypes} from \"../../types/pageLeagues/types\";\nimport {Dispatch} from \"redux\";\nimport axios from \"axios\";\n\nexport const fetchLeagues = () => {\n    return async (dispatch: Dispatch<LeaguesAction>) => {\n        try {\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            dispatch({type: LeaguesActionTypes.FETCH_LEAGUES})\n            const response = await axios.get<IRequestLeagues>(\"https://api.football-data.org/v2/competitions?plan=TIER_ONE\", data)\n\n            dispatch({\n                type: LeaguesActionTypes.FETCH_LEAGUES_SUCCESS,\n                payload: response.data.competitions\n                })\n        }\n        catch (error) {\n            dispatch({type: LeaguesActionTypes.FETCH_LEAGUES_ERROR, payload: error})\n        }\n    }\n}\n\nexport const filteringLeagues = (value: string, leagues: ILeagueCard[]) => {\n    return (dispatch: Dispatch<LeaguesAction>) => {\n        const filterLeagues: ILeagueCard[]  = leagues.filter(league => {\n            if((league.name.toLowerCase()).indexOf(value.toLowerCase(), 0) !== -1){\n                return league;\n            }\n            return false\n        });\n        dispatch({\n            type: LeaguesActionTypes.FILTER_LEAGUES,\n            payload: {\n                filteredLeagues: filterLeagues\n            }\n        })\n    }\n}","import {Dispatch} from \"redux\";\nimport {MatchesAction, MatchesActionTypes} from \"../../types/pageLeague/types\";\nimport axios from \"axios\";\n\n\nexport const fetchMatches = (id: number) => {\n    return async (dispatch: Dispatch<MatchesAction>) => {\n        try {\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get(`https://api.football-data.org/v2/competitions/${id}/matches`, data)\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES_SUCCESS,\n                payload: response.data.matches\n            })\n        }\n        catch (error){\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n\nexport const fetchMatchesOfSeason = (id: number, season: number) => {\n    return async (dispatch: Dispatch<MatchesAction>) => {\n        try {\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get(`https://api.football-data.org/v2/competitions/${id}/matches?season=${season}`, data)\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES_SEASON,\n                payload: response.data.matches\n            })\n        }\n        catch (error){\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n\nexport const fetchMatchesOfDate = (id: number, dataFrom: string, dataTo: string) => {\n    return async (dispatch: Dispatch<MatchesAction>) => {\n        try {\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get(`https://api.football-data.org/v2/competitions/${id}/matches?dateFrom=${dataFrom}&dateTo=${dataTo}`, data)\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES_DATE,\n                payload: response.data.matches\n            })\n        }\n        catch (error){\n            dispatch({\n                type: MatchesActionTypes.FETCH_MATCHES_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n\nexport const changeMatchesActivePage = (page: number) => {\n    return (dispatch: Dispatch<MatchesAction>) => {\n        dispatch({\n            type: MatchesActionTypes.CHANGE_MATCHES_ACTIVE_PAGE,\n            payload: page\n        })\n    }\n}","\nexport interface ITeam {\n    id: number,\n    shortName: string,\n    crestUrl: string\n}\n\nexport interface IMatch {\n    id: number,\n    status: string,\n    utcDate: string,\n    season: {\n        id: number,\n        startDate: string,\n        endDate: string,\n    },\n    score: {\n        winner: string,\n        fullTime: {\n            homeTeam: number,\n            awayTeam: number\n        },\n        penalties: {\n            homeTeam: number | null,\n            awayTeam: number | null\n        }\n    },\n    homeTeam: {\n        id: number,\n        name: string\n    },\n    awayTeam: {\n        \"id\": number,\n        \"name\": string\n    }\n}\n\nexport enum TeamActionTypes {\n    FETCH_TEAM = \"FETCH_TEAM\",\n    FETCH_TEAM_SUCCESS = \"FETCH_TEAM_SUCCESS\",\n    FETCH_TEAM_ERROR = \"FETCH_TEAM_ERROR\"\n}\n\nexport enum MatchesTeamActionTypes {\n    FETCH_MATCHES_TEAM = \"FETCH_MATCHES_TEAM\",\n    FETCH_MATCHES_TEAM_SUCCESS = \"FETCH_MATCHES_TEAM_SUCCESS\",\n    FETCH_MATCHES_TEAM_ERROR = \"FETCH_MATCHES_TEAM_ERROR\",\n    FETCH_MATCHES_TEAM_SEASON = \"FETCH_MATCHES_SEASON_TEAM_SUCCESS\",\n    FETCH_MATCHES_TEAM_DATE = \"FETCH_MATCHES_SEASON_TEAM_DATE\",\n    CHANGE_MATCHES_TEAM_ACTIVE_PAGE = \"CHANGE_MATCHES_TEAM_ACTIVE_PAGE\"\n}\n\ninterface FetchMatchesTeamAction {\n    type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM\n}\n\ninterface FetchMatchesTeamActionSuccess {\n    type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_SUCCESS,\n    payload: IMatch[]\n}\n\ninterface FetchMatchesTeamActionSeason {\n    type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_SEASON,\n    payload: IMatch[]\n}\n\ninterface FetchMatchesTeamActionDate {\n    type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_DATE,\n    payload: IMatch[]\n}\n\ninterface FetchMatchesTeamActionError {\n    type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_ERROR,\n    payload: any\n}\n\ninterface ChangeMatchesTeamActivePage {\n    type: MatchesTeamActionTypes.CHANGE_MATCHES_TEAM_ACTIVE_PAGE,\n    payload: number\n}\n\n\nexport interface TeamState {\n    team: ITeam,\n    loading: boolean,\n    error: null | any,\n}\n\nexport interface MatchesTeamState {\n    matches: IMatch[],\n    activePage: number,\n    loading: boolean,\n    error: null | any\n}\n\n\ninterface FetchTeamAction {\n    type: TeamActionTypes.FETCH_TEAM\n}\n\ninterface FetchTeamActionSuccess {\n    type: TeamActionTypes.FETCH_TEAM_SUCCESS,\n    payload: ITeam\n}\n\ninterface FetchTeamActionError {\n    type: TeamActionTypes.FETCH_TEAM_ERROR,\n    payload: any\n}\n\nexport type TeamAction = FetchTeamAction | FetchTeamActionSuccess | FetchTeamActionError\nexport type MatchesTeamAction = FetchMatchesTeamAction | FetchMatchesTeamActionSuccess | FetchMatchesTeamActionError |\n    FetchMatchesTeamActionDate | FetchMatchesTeamActionSeason | ChangeMatchesTeamActivePage","import React from 'react'\nimport {TeamTable} from \"../../types/pageLeague/types\";\nimport {useHistory} from \"react-router-dom\";\nimport {fetchTeam} from \"../../store/actionCreators/team\";\nimport {useDispatch} from \"react-redux\";\ninterface StandingsTeam{\n    team: TeamTable\n}\n\n\nconst TeamOfStandings:React.FC<StandingsTeam> = ({team}) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const changeTeam = () => {\n        history.push(`/team?id=${team.team.id}`)\n        history.go(0)\n    }\n    return (\n        <tr key={team.team.id}>\n            <td className={\"position\"}>{team.position}</td>\n            <td>\n                <div>\n                    <img src={team.team.crestUrl}/>\n                    <span onClick={() => changeTeam()}>\n                        {team.team.name}\n                    </span>\n                </div>\n            </td>\n            <td>{team.playedGames}</td>\n            <td>{team.won}</td>\n            <td>{team.draw}</td>\n            <td>{team.lost}</td>\n            <td>{team.goalDifference}</td>\n            <td>{team.points}</td>\n        </tr>\n    )\n}\n\nexport default TeamOfStandings","import React from 'react'\nimport {TeamTable} from \"../../types/pageLeague/types\";\nimport TeamOfStandings from \"./teamOfStandings\";\n\n\ninterface StandingsListProps{\n    standings: TeamTable[]\n}\n\nconst TableStandings:React.FC<StandingsListProps> = ({standings}) => {\n    return (\n        <div className=\"tableStandings\">\n            <table>\n                <tr>\n                    <th>#</th>\n                    <th>Команда</th>\n                    <th>С</th>\n                    <th>В</th>\n                    <th>Н</th>\n                    <th>П</th>\n                    <th>РГ</th>\n                    <th>Очки</th>\n                </tr>\n                {standings.map(team =>\n                    <TeamOfStandings team={team}/>\n                )}\n            </table>\n        </div>\n    )\n}\n\nexport default TableStandings","export default __webpack_public_path__ + \"static/media/soccer-ball.d603992e.svg\";","import React from 'react'\nimport ball from \"./soccer-ball.svg\";\nimport \"./otherComponents.scss\"\nimport {useHistory} from 'react-router-dom'\nconst Navbar:React.FC = () => {\n    const history = useHistory()\n    return(\n        <div className={\"navbar\"}>\n            <img src={ball}/>\n            <span onClick={() => history.push(\"/\")}>\n                <a href={\"/\"}>\n                FootSTAT</a>\n            </span>\n        </div>\n    )\n}\n\nexport default Navbar","import React, {useEffect, useRef, useState} from \"react\";\nimport './pageLeague.scss'\nimport {useDispatch} from \"react-redux\";\nimport {useTypeSelector} from \"../../hooks/useTypeSelector\";\nimport {\n    changeMatchesActivePage,\n    fetchMatches,\n    fetchMatchesOfDate,\n    fetchMatchesOfSeason\n} from \"../../store/actionCreators/matchesLeague\";\nimport {fetchTeams} from \"../../store/actionCreators/teams\";\nimport {fetchLeague} from \"../../store/actionCreators/league\";\nimport {fetchStandings} from \"../../store/actionCreators/standings\";\nimport TableStandings from \"./tableStandings\";\nimport Navbar from \"../otherComponents/navBar\";\nimport Preloader from \"../otherComponents/preloader\";\nimport Error from \"../otherComponents/error\";\nimport {useHistory} from \"react-router-dom\";\nconst PageLeague:React.FC = () => {\n\n    const dispatch = useDispatch()\n\n    const {basicInfo} = useTypeSelector(state => state.league)\n    const {matches, activePage, loadingMatches, errorMatches} = useTypeSelector(state => state.matches)\n    const {teams, errorTeams, loadingTeams} = useTypeSelector(state => state.teams)\n    const {standings, loadingStandings, errorStandings} = useTypeSelector(state => state.standings)\n    const [isStandings, setStandings] = useState<boolean>(true)\n\n    const matchesOnePage = 30;\n    const [start, setStart] = useState<number>(0);\n    const [end, setEnd] = useState<number>(matchesOnePage);\n    const [pages, setPages] = useState<number[]>([]);\n\n    const [dataFrom, setDataFrom] = useState<string>(\"\")\n    const [dataTo, setDataTo] = useState<string>(\"\")\n\n    const refButtonTeamList = useRef() as React.MutableRefObject<HTMLButtonElement>;\n    const refButtonTeamTable = useRef() as React.MutableRefObject<HTMLButtonElement>;\n    const [flag, setFlag] = useState<number>(1)\n    const [seasonState, setSeasonState] = useState<number>(2021)\n    const history = useHistory()\n\n    useEffect(() => {\n        initialPages();\n    }, [matches])\n\n    const initialPages = () => {\n        const pageCount = Math.ceil(matches.length / matchesOnePage);\n        let array: number[] = [];\n        for(let i = 1; i <= pageCount; i++){\n            array.push(i)\n        }\n        setPages(array);\n        changePage(0, matchesOnePage, 0)\n    }\n\n    const changePage = (start: number, end: number, active:number) => {\n        dispatch(changeMatchesActivePage(active));\n        setStart(start);\n        setEnd(end);\n    }\n\n    useEffect(() => {\n        const param:string | null = getParams(\"id\");\n        let id: number = Number(param)\n        const startDateLeague = localStorage.getItem(\"startDateLeague\")\n        const endDateLeague = localStorage.getItem(\"endDateLeague\")\n        if (startDateLeague && endDateLeague && startDateLeague !== \"undefined\" && endDateLeague !== \"undefined\"){\n            dispatch(fetchMatchesOfDate(id, startDateLeague, endDateLeague))\n        }\n        else{\n            dispatch(fetchMatches(id))\n        }\n\n        dispatch(fetchLeague(id))\n        dispatch(fetchTeams(id))\n        dispatch(fetchStandings(id))\n\n    }, [dispatch])\n\n    useEffect(() => {\n        if (flag){\n            if (matches[0]?.season.startDate !== undefined && matches[0]?.season.endDate !== undefined){\n                setDataFrom(`${matches[0]?.season.startDate}`)\n                setDataTo(`${matches[0]?.season.endDate}`)\n                // @ts-ignore\n                setSeasonState(matches[0]?.season.startDate.split(\"-\")[0])\n                localStorage.setItem(\"startDateLeague\", matches[0]?.season.startDate)\n                localStorage.setItem(\"endDateLeague\", matches[0]?.season.endDate)\n            }\n        }\n    }, [matches])\n\n    const getParams = (key:string) : string | null => {\n        const params:string = window.location.hash.split(\"?\")[1];\n        const arrayParams: Array<string> = params.split(\"&\");\n        console.log(arrayParams)\n        for (let param in arrayParams){\n            const map: Array<string> = arrayParams[param].split(\"=\");\n            if(map[0] === key) return map[1];\n        }\n        return null;\n    }\n\n    const changeTeamTable = (state: boolean) => {\n        refButtonTeamTable.current.classList.toggle(\"activeButton\")\n        refButtonTeamList.current.classList.toggle(\"activeButton\")\n        setStandings(state)\n    }\n\n    const changeSeasonMatches = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const param:string | null = getParams(\"id\");\n        let id: number = Number(param)\n        const season = Number(e.target.value)\n        setFlag(1)\n        setSeasonState(season)\n        dispatch(fetchMatchesOfSeason(id, season))\n    }\n\n    const changeDateMatches = (e: React.ChangeEvent<HTMLInputElement>, flagDate: boolean) => {\n        const date = e.target.value\n        const param:string | null = getParams(\"id\");\n        let id: number = Number(param)\n        setFlag(0)\n        if(flagDate){\n            setDataFrom(date)\n            localStorage.setItem(\"startDateLeague\", date)\n            dispatch(fetchMatchesOfDate(id, date, dataTo))\n        }else{\n            setDataTo(date)\n            localStorage.setItem(\"endDateLeague\", date)\n            dispatch(fetchMatchesOfDate(id, dataFrom, date))\n        }\n    }\n\n    return(\n        <div className={\"league\"}>\n            <Navbar/>\n            <div className={\"mainPart\"}>\n                <div className={\"descriptionLeague\"}>\n                    <div className={\"leagueName\"}>\n                        <span>{basicInfo.name}</span>\n                    </div>\n                    <div className={\"basicInfo\"}>\n                        <div>\n                            <span>Даты проведения:</span>\n                            <span>{basicInfo?.currentSeason?.startDate.replaceAll(\"-\", \".\")} - {basicInfo?.currentSeason?.endDate.replaceAll(\"-\", \".\")}</span>\n                        </div>\n                        <div>\n                            <span>Количество команд:</span>\n                            <span>{teams.length}</span>\n                        </div>\n                        <div>\n                            <span>Стадия сезона:</span>\n                            <span>{basicInfo?.currentSeason?.currentMatchday}-й тур чемпионата</span>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"actionsLeague\"}>\n                    <div className={\"teamsListBlock\"}>\n                        <div className={\"buttonsActionTeam\"}>\n                            <button className={\"activeButton\"} onClick={() => changeTeamTable(true)} ref={refButtonTeamTable}>Турнирная таблица</button>\n                            <button onClick={() => changeTeamTable(false)} ref={refButtonTeamList}>Список команд</button>\n                        </div>\n                        {\n                            isStandings ?\n                                loadingStandings ? <Preloader/> : errorStandings ? <Error/> :\n                                <TableStandings standings={standings}/>\n                                :\n                                loadingTeams ? <Preloader/> : errorTeams ? <Error/> :\n                                <div className={\"allTeams\"}>\n                                    {teams.map(team =>\n                                        <div className={\"team\"} key={team.id}>\n                                            <img src={team.crestUrl}/>\n                                            <span onClick={() => history.push(`/team?id=${team.id}`)}>\n                                                {team.name}\n                                            </span>\n                                        </div>\n                                    )}\n                                </div>\n                        }\n                    </div>\n                    <div className={\"matchesLeagueBlock\"}>\n                        <div className={\"titleBlock\"}>Матчи турнира</div>\n                        <div className={\"filterOfMatches\"}>\n                            <span>C</span>\n                            <input\n                                type=\"date\"\n                                name=\"calendar\"\n                                className={\"calendar\"}\n                                value={dataFrom}\n                                max={`${matches[0]?.season.endDate}`}\n                                min={`${matches[0]?.season.startDate}`}\n                                onChange={(e) => changeDateMatches(e, true)}/>\n                            <span>До</span>\n                            <input\n                                type=\"date\"\n                                name=\"calendar\"\n                                className={\"calendar\"}\n                                value={dataTo}\n                                max={`${matches[0]?.season.endDate}`}\n                                min={`${matches[0]?.season.startDate}`}\n                                onChange={(e) => changeDateMatches(e, false)}/>\n                            <div className={\"select\"}>\n                                <select onChange={(e) => changeSeasonMatches(e)} value={seasonState}>\n                                    <option value={2021}>2021/2022</option>\n                                    <option value={2020}>2020/2021</option>\n                                    <option value={2019}>2019/2020</option>\n                                    <option value={2018}>2018/2019</option>\n                                </select>\n                            </div>\n                        </div>\n                        {loadingMatches ?\n                            <Preloader/> :\n                            errorMatches ?\n                                <Error/> :\n                            <div className={\"matchesLeagueList\"}>\n                                {matches.slice(start, end).map(match =>\n\n                                    <div className={\"match\"} key={match.id}>\n                                    <span>\n                                        {`${match.utcDate.split(\"T\")[0].split(\"-\")[2]}:${match.utcDate.split(\"T\")[0].split(\"-\")[1]}:${match.utcDate.split(\"T\")[0].split(\"-\")[0]}`}\n                                    </span>\n                                        <span className={match.score.fullTime.homeTeam > match.score.fullTime.awayTeam ? \"winnerTeam\" : \"\"} onClick={() => history.push(`/team?id=${match.homeTeam.id}`)}>\n                                            {match.homeTeam.name}\n                                        </span>\n                                        <span>{match.status === \"FINISHED\" ? match.score.fullTime.homeTeam : \"-\"}</span>\n                                        <span>:</span>\n                                        <span>{match.status === \"FINISHED\" ? match.score.fullTime.awayTeam : \"-\"}</span>\n                                        <span className={match.score.fullTime.homeTeam < match.score.fullTime.awayTeam ? \"winnerTeam\" : \"\"} onClick={() => history.push(`/team?id=${match.awayTeam.id}`)}>\n                                            {match.awayTeam.name}\n                                        </span>\n                                    </div>\n\n                                )}\n                            </div>\n                        }\n                        <div className=\"pagination\">\n                            {pages.map(page =>\n                                <a className={activePage === page - 1 ? \"active\" : \"\"} onClick={() => changePage( (page - 1) * matchesOnePage, page * matchesOnePage, page - 1)}>{page}</a>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PageLeague;","import {Dispatch} from \"redux\";\nimport {LeagueActionTypes} from \"../../types/pageLeague/types\";\nimport axios from \"axios\";\nimport {LeagueAction, ILeague} from \"../../types/pageLeague/types\";\n\n\nexport const fetchLeague = (id: number) => {\n    return async (dispatch: Dispatch<LeagueAction>) => {\n        try {\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            dispatch({type: LeagueActionTypes.FETCH_LEAGUE})\n            const response = await axios.get<ILeague>(`https://api.football-data.org/v2/competitions/${id}`, data)\n            dispatch({\n                type: LeagueActionTypes.FETCH_LEAGUE_SUCCESS,\n                payload: response.data\n            })\n        }\n        catch (error) {\n            dispatch({type: LeagueActionTypes.FETCH_LEAGUE_ERROR, payload: error})\n        }\n    }\n}","import {Dispatch} from \"redux\";\nimport {TeamsAction, TeamsActionTypes} from \"../../types/pageLeague/types\";\nimport axios from \"axios\";\n\n\nexport const fetchTeams = (id: number) => {\n    return async (dispatch: Dispatch<TeamsAction>) => {\n        try {\n            dispatch({\n                type: TeamsActionTypes.FETCH_TEAMS\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get(`https://api.football-data.org/v2/competitions/${id}/teams`, data)\n            dispatch({\n                type: TeamsActionTypes.FETCH_TEAMS_SUCCESS,\n                payload: response.data.teams\n            })\n        }\n        catch (error){\n            dispatch({\n                type: TeamsActionTypes.FETCH_TEAMS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n","import {Dispatch} from \"redux\";\nimport {IRequestStandings, StandingsAction, StandingsActionTypes} from \"../../types/pageLeague/types\";\nimport axios from \"axios\";\n\n\nexport const fetchStandings = (id: number) => {\n    return async (dispatch: Dispatch<StandingsAction>) => {\n        try {\n            dispatch({\n                type: StandingsActionTypes.FETCH_STANDINGS\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get<IRequestStandings>(`https://api.football-data.org/v2/competitions/${id}/standings`, data)\n            dispatch({\n                type: StandingsActionTypes.FETCH_STANDINGS_SUCCESS,\n                payload: response.data.standings[0].table\n            })\n        }\n        catch (error){\n            dispatch({\n                type: StandingsActionTypes.FETCH_STANDINGS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n","import {Dispatch} from \"redux\";\nimport {TeamAction, TeamActionTypes} from \"../../types/pageTeam/types\";\nimport axios from \"axios\";\n\n\nexport const fetchTeam = (id: number) => {\n    return async (dispatch: Dispatch<TeamAction>) => {\n        try {\n            dispatch({\n                type: TeamActionTypes.FETCH_TEAM\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get(`https://api.football-data.org/v2/teams/${id}`, data)\n            dispatch({\n                type: TeamActionTypes.FETCH_TEAM_SUCCESS,\n                payload: response.data\n            })\n        }\n        catch (error){\n            dispatch({\n                type: TeamActionTypes.FETCH_TEAM_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n","import {Dispatch} from \"redux\";\nimport {MatchesTeamAction, MatchesTeamActionTypes} from \"../../types/pageTeam/types\";\nimport axios from \"axios\";\n\nexport const fetchMatchesTeam = (id: number, venue: string) => {\n    return async (dispatch: Dispatch<MatchesTeamAction>) => {\n        try {\n            dispatch({\n                type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get(`https://api.football-data.org/v2/teams/${id}/matches?venue=${venue}`, data)\n            dispatch({\n                type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_SUCCESS,\n                payload: response.data.matches\n            })\n        }\n        catch (error){\n            dispatch({\n                type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n\nexport const fetchMatchesTeamOfDate = (id: number, venue: string, dateFrom: string, dateTo: string) => {\n    return async (dispatch: Dispatch<MatchesTeamAction>) => {\n        try {\n            dispatch({\n                type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM\n            })\n            const data = {\n                headers: {\n                    \"X-Auth-Token\": process.env.REACT_APP_SECRET_KEY\n                }\n            }\n            const response = await axios.get(\n                `https://api.football-data.org/v2/teams/${id}/matches?venue=${venue}&dateFrom=${dateFrom}&dateTo=${dateTo}`,\n                data)\n            dispatch({\n                type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_SUCCESS,\n                payload: response.data.matches\n            })\n        }\n        catch (error){\n            dispatch({\n                type: MatchesTeamActionTypes.FETCH_MATCHES_TEAM_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n\nexport const changeMatchesTeamActivePage = (page: number) => {\n    return (dispatch: Dispatch<MatchesTeamAction>) => {\n        dispatch({\n            type: MatchesTeamActionTypes.CHANGE_MATCHES_TEAM_ACTIVE_PAGE,\n            payload: page\n        })\n    }\n}","import React from 'react'\nimport {IMatch} from \"../../types/pageTeam/types\";\nimport \"./pageTeam.scss\"\nimport {useHistory} from \"react-router-dom\"\ninterface IMatchProps {\n    match: IMatch,\n}\n\nconst MatchTeam:React.FC<IMatchProps> = ({match}) => {\n    const history = useHistory()\n    const changeTeam = (id: number) => {\n        history.push(`/team?id=${id}`)\n        window.location.reload();\n    }\n    return (\n        <div className={\"match\"} key={match.id}>\n                            <span>\n                                {`${match.utcDate.split(\"T\")[0].split(\"-\")[2]}:${\n                                    match.utcDate.split(\"T\")[0].split(\"-\")[1]}:${\n                                    match.utcDate.split(\"T\")[0].split(\"-\")[0]}`}\n                            </span>\n            <span className={match.score.fullTime.homeTeam > match.score.fullTime.awayTeam ? \"winnerTeam\" : \"\"} onClick={() => changeTeam(match.homeTeam.id)}>\n                {match.homeTeam.name}\n            </span>\n            <span>{match.status === \"FINISHED\" ? match.score.fullTime.homeTeam : \"-\"}</span>\n            <span>:</span>\n            <span>{match.status === \"FINISHED\" ? match.score.fullTime.awayTeam : \"-\"}</span>\n            <span className={match.score.fullTime.homeTeam < match.score.fullTime.awayTeam ? \"winnerTeam\" : \"\"} onClick={() => changeTeam(match.awayTeam.id)}>\n                {match.awayTeam.name}\n            </span>\n        </div>\n    )\n}\n\nexport default MatchTeam","import React from 'react'\nimport {IMatch} from \"../../types/pageTeam/types\";\nimport MatchTeam from \"./matchTeam\";\nimport \"./pageTeam.scss\"\n\ninterface IMatchesTeamList {\n    matches: IMatch[],\n    start: number,\n    end: number,\n}\nconst MatchesTeamList:React.FC<IMatchesTeamList> = ({matches, start, end}) => {\n    return (\n        <div className={\"matchesTeamList\"}>\n            {matches.slice(start, end).map(match =>\n                <MatchTeam match={match}/>\n            )}\n\n        </div>\n    )\n}\n\nexport default MatchesTeamList","import React, {useEffect, useRef, useState} from 'react'\nimport './pageTeam.scss'\nimport ball from \"../otherComponents/soccer-ball.svg\";\nimport {useDispatch} from \"react-redux\";\nimport {useTypeSelector} from \"../../hooks/useTypeSelector\";\nimport {fetchTeam} from \"../../store/actionCreators/team\";\nimport {\n    changeMatchesTeamActivePage,\n    fetchMatchesTeam,\n    fetchMatchesTeamOfDate\n} from \"../../store/actionCreators/matchesTeam\";\nimport MatchesTeamList from \"./matchesTeamList\";\nimport Preloader from \"../otherComponents/preloader\";\nimport Error from \"../otherComponents/error\";\nimport Navbar from \"../otherComponents/navBar\";\nconst PageTeam:React.FC = () => {\n    const dispatch = useDispatch()\n    const {team} = useTypeSelector(state => state.team)\n    const {matches, activePage, loading, error} = useTypeSelector(state => state.matchesTeam)\n    const refButtonTeamListHome = useRef() as React.MutableRefObject<HTMLButtonElement>;\n    const refButtonTeamListAway = useRef() as React.MutableRefObject<HTMLButtonElement>;\n    const [dateFrom, setDateFrom] = useState<string>(\"\")\n    const [dateTo, setDateTo] = useState<string>(\"\")\n    const [flag, setFlag] = useState<boolean>(true)\n    const [venue, setVenue] = useState<string>(\"\")\n    const matchesOnePage = 10;\n    const [start, setStart] = useState<number>(0);\n    const [end, setEnd] = useState<number>(matchesOnePage);\n    const [pages, setPages] = useState<number[]>([]);\n\n    useEffect(() => {\n        const param:string | null = getParams(\"id\");\n        let id: number = Number(param)\n        dispatch(fetchTeam(id))\n\n        const startDateTeam = localStorage.getItem(\"startDateTeam\")\n        const endDateTeam = localStorage.getItem(\"endDateTeam\")\n\n        console.log(matches[0]?.season.endDate)\n\n        if (startDateTeam && endDateTeam && startDateTeam !== \"undefined\" && endDateTeam !== \"undefined\"){\n            dispatch(fetchMatchesTeamOfDate(id, \"HOME\", startDateTeam, endDateTeam))\n        } else{\n            dispatch(fetchMatchesTeam(id, \"HOME\"))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (flag){\n            const startDateTeam = localStorage.getItem(\"startDateTeam\")\n            const endDateTeam = localStorage.getItem(\"endDateTeam\")\n            if (startDateTeam && endDateTeam && startDateTeam !== \"undefined\" && endDateTeam !== \"undefined\"){\n                setDateFrom(startDateTeam)\n                setDateTo(endDateTeam)\n            } else{\n                localStorage.setItem(\"startDateTeam\", `${matches[0]?.season.startDate}`)\n                localStorage.setItem(\"endDateTeam\", `${matches[0]?.season.endDate}`)\n                setDateFrom(`${matches[0]?.season.startDate}`)\n                setDateTo(`${matches[0]?.season.endDate}`)\n            }\n        }\n    }, [matches])\n\n    useEffect(() => {\n        initialPages();\n    }, [matches])\n\n    const initialPages = () => {\n        const pageCount = Math.ceil(matches.length / matchesOnePage);\n        let array: number[] = [];\n        for(let i = 1; i <= pageCount; i++){\n            array.push(i)\n        }\n        setPages(array);\n        changePage(0, matchesOnePage, 0)\n    }\n\n    const changePage = (start: number, end: number, active:number) => {\n        dispatch(changeMatchesTeamActivePage(active));\n        setStart(start);\n        setEnd(end);\n    }\n\n    const getParams = (key:string) : string | null => {\n        const params:string = window.location.hash.split(\"?\")[1];\n        const arrayParams: Array<string> = params.split(\"&\");\n        for (let param in arrayParams){\n            const map: Array<string> = arrayParams[param].split(\"=\");\n            if(map[0] === key) return map[1];\n        }\n        return null;\n    }\n\n    const changeVenueMatches = (venue: string) => {\n        const param:string | null = getParams(\"id\");\n        let id: number = Number(param)\n        changeMatchesList()\n        setVenue(venue)\n        dispatch(fetchMatchesTeamOfDate(id, venue, dateFrom, dateTo))\n    }\n\n    const changeMatchesList = () => {\n        refButtonTeamListHome.current.classList.toggle(\"activeButton\")\n        refButtonTeamListAway.current.classList.toggle(\"activeButton\")\n    }\n    const changeDateMatchesTeam = (e: React.ChangeEvent<HTMLInputElement>, flagDate: boolean) => {\n        const date = e.target.value\n        const param:string | null = getParams(\"id\");\n        let id: number = Number(param)\n        setFlag(false)\n        if(flagDate){\n            setDateFrom(date)\n            localStorage.setItem(\"startDateTeam\", date)\n            dispatch(fetchMatchesTeamOfDate(id, venue, date, dateTo))\n        }else{\n            setDateTo(date)\n            localStorage.setItem(\"endDateTeam\", date)\n            dispatch(fetchMatchesTeamOfDate(id, venue, dateFrom, date))\n        }\n    }\n\n    return(\n        <div className={\"pageTeam\"}>\n            <Navbar/>\n            <div className={\"mainPart\"}>\n                <div className={\"descriptionTeam\"}>\n                    <img src={team.crestUrl}/>\n                    <span>{team.shortName}</span>\n                </div>\n                <div className={\"buttonsChangeMatches\"}>\n                    <button className={\"activeButton\"}\n                            onClick={() => changeVenueMatches(\"HOME\")}\n                            ref={refButtonTeamListHome}>Домашние матчи</button>\n                    <button\n                        onClick={() => changeVenueMatches(\"AWAY\")}\n                        ref={refButtonTeamListAway}>Выездные матчи</button>\n                </div>\n                <div className={\"matchesTeamBlock\"}>\n                    <div className={\"filterOfMatches\"}>\n                        <span>C</span>\n                        <input\n                            type=\"date\"\n                            name=\"calendar\"\n                            className={\"calendar\"}\n                            value={dateFrom}\n                            max={`2022-05-31`}\n                            min={`2020-08-05`}\n                            onChange={(e) => changeDateMatchesTeam(e, true)}/>\n                        <span>До</span>\n                        <input\n                            type=\"date\"\n                            name=\"calendar\"\n                            className={\"calendar\"}\n                            value={dateTo}\n                            max={`2022-05-31`}\n                            min={`2020-08-05`}\n                            onChange={(e) => changeDateMatchesTeam(e, false)}/>\n                    </div>\n                    {loading ? <Preloader/> : error ? <Error/> : <MatchesTeamList matches={matches} start={start} end={end}/>}\n                    <div className=\"pagination\">\n                        {pages.map(page =>\n                            <a className={activePage === page - 1 ? \"active\" : \"\"} onClick={() => changePage( (page - 1) * matchesOnePage, page * matchesOnePage, page - 1)}>{page}</a>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default PageTeam","import {LeaguesAction, LeaguesActionTypes, LeaguesState} from \"../../types/pageLeagues/types\";\n\nconst initialState: LeaguesState = {\n    leagues: [],\n    filterLeagues: [],\n    loading: false,\n    error: null,\n}\n\nexport const leaguesReducer = (state = initialState, action:LeaguesAction): LeaguesState => {\n    switch (action.type) {\n        case LeaguesActionTypes.FETCH_LEAGUES:\n            return {loading: true, leagues: [], filterLeagues: [], error: null}\n        case LeaguesActionTypes.FETCH_LEAGUES_SUCCESS:\n            return {loading: false, leagues: action.payload, filterLeagues: action.payload, error: null}\n        case LeaguesActionTypes.FETCH_LEAGUES_ERROR:\n            return {loading: false, leagues: [], filterLeagues: [], error: action.payload}\n        case LeaguesActionTypes.FILTER_LEAGUES:\n            return {loading: false, leagues: state.leagues, filterLeagues: action.payload.filteredLeagues, error: null}\n        default:\n            return state\n    }\n}","import {\n    MatchesAction,\n    MatchesActionTypes,\n    MatchesState,\n} from \"../../types/pageLeague/types\";\n\nconst initialState:MatchesState = {\n    matches: [],\n    activePage: 0,\n    loadingMatches: false,\n    errorMatches: null\n}\n\nexport const matchesReducer = (state = initialState, action:MatchesAction):MatchesState => {\n    switch (action.type){\n        case MatchesActionTypes.FETCH_MATCHES:\n            return {matches: [], activePage: 0, loadingMatches: true, errorMatches: null}\n        case MatchesActionTypes.FETCH_MATCHES_SUCCESS:\n            return {matches: action.payload, activePage: 0, loadingMatches: false, errorMatches: null}\n        case MatchesActionTypes.FETCH_MATCHES_ERROR:\n            return {matches: [], activePage: 0, loadingMatches: false, errorMatches: action.payload}\n        case MatchesActionTypes.CHANGE_MATCHES_ACTIVE_PAGE:\n            return {matches: state.matches, activePage: action.payload, loadingMatches: state.loadingMatches, errorMatches:state.errorMatches}\n        case MatchesActionTypes.FETCH_MATCHES_SEASON:\n            return {matches: action.payload, activePage: 0, loadingMatches: false, errorMatches: null}\n        case MatchesActionTypes.FETCH_MATCHES_DATE:\n            return {matches: action.payload, activePage: 0, loadingMatches: false, errorMatches: null}\n        default:\n            return state\n    }\n}\n","import {\n    TeamsAction,\n    TeamsActionTypes,\n    TeamsState\n} from \"../../types/pageLeague/types\";\n\nconst initialState:TeamsState = {\n    teams: [],\n    loadingTeams: false,\n    errorTeams: null\n}\n\nexport const teamsReducer = (state = initialState, action:TeamsAction):TeamsState => {\n    switch (action.type){\n        case TeamsActionTypes.FETCH_TEAMS:\n            return {teams: [], loadingTeams: true, errorTeams: null}\n        case TeamsActionTypes.FETCH_TEAMS_SUCCESS:\n            return {teams: action.payload, loadingTeams: false, errorTeams: null}\n        case TeamsActionTypes.FETCH_TEAMS_ERROR:\n            return {teams: [], loadingTeams: false, errorTeams: action.payload}\n        default:\n            return state\n    }\n}\n","import {LeagueState, ILeague, LeagueAction, LeagueActionTypes} from \"../../types/pageLeague/types\";\n\nconst initialState:LeagueState = {\n    basicInfo: {} as ILeague,\n    loading: false,\n    error: null\n}\n\nexport const leagueReducer = (state = initialState, action:LeagueAction):LeagueState => {\n    switch (action.type){\n        case LeagueActionTypes.FETCH_LEAGUE:\n            return {basicInfo: {} as ILeague, loading: true, error:  null}\n        case LeagueActionTypes.FETCH_LEAGUE_SUCCESS:\n            return {basicInfo: action.payload, loading: false, error: null}\n        case LeagueActionTypes.FETCH_LEAGUE_ERROR:\n            return {basicInfo: {} as ILeague, loading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n","import {StandingsAction, StandingsActionTypes, StandingsState,} from \"../../types/pageLeague/types\";\n\nconst initialState:StandingsState = {\n    standings: [],\n    loadingStandings: false,\n    errorStandings: null\n}\n\nexport const standingsReducer = (state = initialState, action:StandingsAction):StandingsState => {\n    switch (action.type){\n        case StandingsActionTypes.FETCH_STANDINGS:\n            return {standings: [], loadingStandings: true, errorStandings: null}\n        case StandingsActionTypes.FETCH_STANDINGS_SUCCESS:\n            return {standings: action.payload, loadingStandings: false, errorStandings: null}\n        case StandingsActionTypes.FETCH_STANDINGS_ERROR:\n            return {standings: [], loadingStandings: false, errorStandings: action.payload}\n        default:\n            return state\n    }\n}\n","import {\n    ITeam,\n    TeamAction,\n    TeamActionTypes,\n    TeamState\n} from \"../../types/pageTeam/types\";\n\nconst initialState:TeamState = {\n    team: {} as ITeam,\n    loading: false,\n    error: null\n}\n\nexport const teamReducer = (state = initialState, action:TeamAction):TeamState => {\n    switch (action.type){\n        case TeamActionTypes.FETCH_TEAM:\n            return {team: {} as ITeam, loading: true, error: null}\n        case TeamActionTypes.FETCH_TEAM_SUCCESS:\n            return {team: action.payload, loading: false, error: null}\n        case TeamActionTypes.FETCH_TEAM_ERROR:\n            return {team: {} as ITeam, loading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n","import {MatchesTeamAction, MatchesTeamActionTypes, MatchesTeamState} from \"../../types/pageTeam/types\";\n\nconst initialState:MatchesTeamState = {\n    matches: [],\n    activePage: 0,\n    loading: false,\n    error: null\n}\nexport const matchesTeamReducer = (state = initialState, action:MatchesTeamAction):MatchesTeamState => {\n    switch (action.type){\n        case MatchesTeamActionTypes.FETCH_MATCHES_TEAM:\n            return {matches: [], activePage: 0, loading: true, error: null}\n        case MatchesTeamActionTypes.FETCH_MATCHES_TEAM_SUCCESS:\n            return {matches: action.payload, activePage: 0, loading: false, error: null}\n        case MatchesTeamActionTypes.FETCH_MATCHES_TEAM_ERROR:\n            return {matches: [], activePage: 0, loading: false, error: action.payload}\n        case MatchesTeamActionTypes.CHANGE_MATCHES_TEAM_ACTIVE_PAGE:\n            return {matches: state.matches, activePage: action.payload, loading: state.loading, error:state.error}\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {leaguesReducer} from \"./leaguesReducer\";\nimport {matchesReducer} from \"./matchesReducer\"\nimport {teamsReducer} from \"./teamsReducer\";\nimport {leagueReducer} from \"./leagueReducer\";\nimport {standingsReducer} from \"./standingsReducer\";\nimport {teamReducer} from \"./teamReducer\";\nimport {matchesTeamReducer} from \"./matchesTeamReducer\";\n\nexport const rootReducer = combineReducers({\n    leagues: leaguesReducer,\n    league: leagueReducer,\n    matches: matchesReducer,\n    teams: teamsReducer,\n    standings: standingsReducer,\n    team: teamReducer,\n    matchesTeam: matchesTeamReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\"\nimport {rootReducer} from \"./reducers\";\n\n// @ts-ignore\n// const composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport PageLeagues from './components/pageLeagues/pageLeagues'\nimport PageLeague from \"./components/pageLeague/pageLeague\";\nimport PageTeam from \"./components/pageTeam/pageTeam\";\nimport {Switch, Route, Redirect, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nconst App:React.FC = () => {\n  return(\n      <Provider store={store}>\n          <Switch>\n              <Route exact path={\"/\"} component={PageLeagues}/>\n              <Route path={\"/league\"} component={PageLeague}/>\n              <Route path={\"/team\"} component={PageTeam}/>\n              <Redirect to={\"/\"}/>\n          </Switch>\n      </Provider>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss'\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}